server {
  listen 80;
  server_name localhost;

  # Security Headers to help prevent common attacks
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  # A basic Content-Security-Policy. You should tailor this to your specific needs.
  # For example, if you load fonts or scripts from a CDN, you'll need to add them here.
  add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self' data:; connect-src 'self';" always;

  # Serve static files from the root directory
  root /usr/share/nginx/html;
  index index.html;

  # Handle client-side routing for the Single Page Application (SPA)
  # This ensures that refreshing a page on a route like /dashboard works correctly.
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Serve Django static files (e.g., for the admin panel)
  location /static/ {
    alias /usr/share/nginx/static/;
    expires 1y;
    add_header Cache-Control "public";
  }

  # Proxy Django admin requests to the backend service.
  location /admin/ {
    proxy_pass http://api:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Proxy API requests to the backend service.
  # 'api' is the name of your Django service in docker-compose.yml.
  location /api {
    proxy_pass http://api:8000;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }
}